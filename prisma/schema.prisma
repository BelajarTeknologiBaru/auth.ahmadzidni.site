// Prisma schema for a live chat system with different users

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  name             String?
  email            String?   @unique
  emailVerified    Boolean?  @default(false)
  verificationCode String?
  image            String?
  hashedPassword   String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  // Relationship with Account
  accounts Account[]

  // Relationship with Message
  messagesSent    Message[] @relation("messagesSent")
  messagesReceived Message[] @relation("messagesReceived")
}

model Account {
  id                String   @id @default(uuid())
  user              User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  @@unique([provider, providerAccountId])
}

model Chat {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  // Relationship with Message
  messages Message[]
}

model Message {
  id         String   @id @default(uuid())
  content    String
  timestamp  DateTime @default(now())
  sender     User     @relation("messagesSent", fields: [senderId], references: [id])
  senderId   String
  receiver   User     @relation("messagesReceived", fields: [receiverId], references: [id])
  receiverId String
  chat       Chat     @relation(fields: [chatId], references: [id])
  chatId     String

  @@index([senderId, receiverId, chatId])
}
